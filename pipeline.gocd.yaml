pipelines:
  demo_app_int:
    group: demo_app
    materials:
      mygit: #name of material
        git: https://github.com/ashikansal/gocd_demo.git
    environment_variables:
      image_version: latest
      DOCKERHUB_USERNAME: ashikansal #replace it by your own username
    stages:
      - unit_test: # name of stage
          jobs:
            unit_test:
              artifacts:
                - build:
                    source: target/site/*
                    destination: test_reports/
              tabs:
                UT_report: test_reports/surefire-report.html
                UT_coverage: test_reports/jacoco/index.html
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker run --rm --name maven-test -v "$HOME/.m2":/root/.m2 -v "$(pwd)":/usr/src/mymaven -w /usr/src/mymaven maven:3.6-jdk-8-slim mvn clean test
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker run --rm --name maven-test -v "$HOME/.m2":/root/.m2 -v "$(pwd)":/usr/src/mymaven -w /usr/src/mymaven maven:3.6-jdk-8-slim mvn surefire-report:report-only
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker run --rm --name maven-test -v "$HOME/.m2":/root/.m2 -v "$(pwd)":/usr/src/mymaven -w /usr/src/mymaven maven:3.6-jdk-8-slim mvn site -DgenerateReports=false
      - build_and_push_image: # name of stage
          clean_workspace: false
          keep_artifacts: true
          jobs:
            build_and_push_image:
              artifacts:
                - external:
                    id: gocd_demo
                    store_id: gocd_demo
                    configuration:
                      options:
                        Image: ${DOCKERHUB_USERNAME}/gocd_demo_app
                        Tag: ${GO_PIPELINE_LABEL}
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker run --rm --name maven-test -v "$HOME/.m2":/root/.m2 -v "$(pwd)":/usr/src/mymaven -w /usr/src/mymaven maven:3.6-jdk-8-slim mvn clean compile package -DskipTests
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - docker build -t $DOCKERHUB_USERNAME/gocd_demo_app:$GO_PIPELINE_LABEL .
      - deploy_app: # name of stage
          clean_workspace: false
          jobs:
            deploy_app:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "docker pull gocd_demo_app:$image_version"               
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - ./deploy_app.sh gocd_demo_app_int 81 gocd_demo_app $image_version
      - health_check: # name of stage
          jobs:
            healthcheck:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - curl -f http://localhost:81/api/products
  demo_app_qa:
    group: demo_app
    materials:
      mygit: #name of material
        git: https://github.com/ashikansal/gocd_demo.git
      upstream:
        pipeline: demo_app_int
        stage: deploy_app
    environment_variables:
      image_version: latest
    stages:
      - pull_and_deploy_app: # name of stage
          jobs:
            deploy_app:
              tasks: 
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "docker pull gocd_demo_app:$image_version"    
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - ./deploy_app.sh gocd_demo_app_qa 82 gocd_demo_app $image_version
      - api_test: # name of stage
          jobs:
            api_test:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "run api test"
      - health_check: # name of stage
          jobs:
            healthcheck:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - curl -f http://localhost:82/api/products

  demo_app_prod:
    group: demo_app
    materials:
      mygit: #name of material
        git: https://github.com/ashikansal/gocd_demo.git
      upstream:
        pipeline: demo_app_qa
        stage: api_test
    environment_variables:
      image_version: latest
    stages:
      - pull_and_deploy_app: # name of stage
          approval: manual
          jobs:
            deploy_app:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - echo "docker pull gocd_demo_app:$image_version"                
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - ./deploy_app.sh gocd_demo_app_prod 83 gocd_demo_app $image_version
      - health_check: # name of stage
          jobs:
            healthcheck:
              tasks:
                - exec:
                    command: bash
                    arguments:
                      - -c
                      - curl -f http://localhost:83/api/products